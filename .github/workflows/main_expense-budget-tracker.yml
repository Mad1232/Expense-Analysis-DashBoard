name: Build and deploy Python app to Azure Web App - Expense-budget-tracker

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Create and start virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B3168F9ECEF34240B076564ECB600127 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_4AF4ADC44CA5434EB5B8B5E5E6F06FBD }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_10CE6819F2A941D7867372165BFAEA4B }}
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'Expense-budget-tracker'
          slot-name: 'Production'
          package: .

      - name: Configure Startup Command
        run: |
          az webapp config set --name Expense-budget-tracker \
                               --resource-group <your-resource-group> \
                               --startup-file "python3 -m streamlit run dashboard.py --server.port \$PORT --server.address 0.0.0.0"
